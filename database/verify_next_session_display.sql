-- =====================================================
-- üîç VERIFICA√á√ÉO: Data da Pr√≥xima Sess√£o no Widget
-- =====================================================
-- Script para verificar se as sess√µes est√£o sendo 
-- criadas e exibidas corretamente no widget "Meus Jogos"
-- =====================================================

-- 1. Verificar estrutura da tabela game_sessions
SELECT 
    'üìã Estrutura da tabela game_sessions' as info,
    column_name,
    data_type,
    is_nullable
FROM information_schema.columns 
WHERE table_schema = 'public' 
  AND table_name = 'game_sessions'
ORDER BY ordinal_position;

-- 2. Verificar se existem jogos cadastrados
SELECT 
    'üéÆ Jogos cadastrados' as info,
    COUNT(*) as total_jogos,
    COUNT(CASE WHEN frequency = 'weekly' THEN 1 END) as jogos_semanais,
    COUNT(CASE WHEN frequency = 'biweekly' THEN 1 END) as jogos_quinzenais,
    COUNT(CASE WHEN frequency = 'monthly' THEN 1 END) as jogos_mensais,
    COUNT(CASE WHEN frequency = 'one_time' THEN 1 END) as jogos_avulsos
FROM public.games 
WHERE status = 'active';

-- 3. Verificar se existem sess√µes criadas
SELECT 
    'üìÖ Sess√µes criadas' as info,
    COUNT(*) as total_sessoes,
    COUNT(CASE WHEN session_date >= CURRENT_DATE THEN 1 END) as sessoes_futuras,
    COUNT(CASE WHEN session_date < CURRENT_DATE THEN 1 END) as sessoes_passadas
FROM public.game_sessions;

-- 4. Verificar sess√µes por jogo (pr√≥ximas sess√µes)
SELECT 
    'üîç Pr√≥ximas sess√µes por jogo' as info,
    g.organization_name as nome_jogo,
    g.frequency as frequencia,
    COUNT(gs.id) as total_sessoes,
    MIN(gs.session_date) as primeira_sessao,
    MAX(gs.session_date) as ultima_sessao,
    COUNT(CASE WHEN gs.session_date >= CURRENT_DATE THEN 1 END) as sessoes_futuras
FROM public.games g
LEFT JOIN public.game_sessions gs ON g.id = gs.game_id
WHERE g.status = 'active'
GROUP BY g.id, g.organization_name, g.frequency
ORDER BY g.organization_name;

-- 5. Verificar pr√≥xima sess√£o espec√≠fica para cada jogo
SELECT 
    '‚è≠Ô∏è Pr√≥xima sess√£o de cada jogo' as info,
    g.organization_name as nome_jogo,
    gs.session_date as proxima_data,
    gs.start_time as hora_inicio,
    gs.end_time as hora_fim,
    gs.status as status_sessao
FROM public.games g
LEFT JOIN LATERAL (
    SELECT session_date, start_time, end_time, status
    FROM public.game_sessions gs2
    WHERE gs2.game_id = g.id 
      AND gs2.session_date >= CURRENT_DATE
    ORDER BY gs2.session_date ASC
    LIMIT 1
) gs ON true
WHERE g.status = 'active'
ORDER BY g.organization_name;

-- 6. Verificar jogos sem sess√µes futuras
SELECT 
    '‚ö†Ô∏è Jogos sem sess√µes futuras' as info,
    g.organization_name as nome_jogo,
    g.frequency as frequencia,
    g.created_at as data_criacao,
    COUNT(gs.id) as total_sessoes_criadas
FROM public.games g
LEFT JOIN public.game_sessions gs ON g.id = gs.game_id
WHERE g.status = 'active'
GROUP BY g.id, g.organization_name, g.frequency, g.created_at
HAVING COUNT(CASE WHEN gs.session_date >= CURRENT_DATE THEN 1 END) = 0
ORDER BY g.organization_name;

-- 7. Verificar jogos com sess√µes futuras
SELECT 
    '‚úÖ Jogos com sess√µes futuras' as info,
    g.organization_name as nome_jogo,
    g.frequency as frequencia,
    COUNT(CASE WHEN gs.session_date >= CURRENT_DATE THEN 1 END) as sessoes_futuras,
    MIN(CASE WHEN gs.session_date >= CURRENT_DATE THEN gs.session_date END) as proxima_sessao
FROM public.games g
LEFT JOIN public.game_sessions gs ON g.id = gs.game_id
WHERE g.status = 'active'
GROUP BY g.id, g.organization_name, g.frequency
HAVING COUNT(CASE WHEN gs.session_date >= CURRENT_DATE THEN 1 END) > 0
ORDER BY proxima_sessao;

-- 8. Verificar dados que seriam retornados pela consulta do Flutter
SELECT 
    'üì± Dados para o widget Flutter' as info,
    g.id as game_id,
    g.organization_name as nome_jogo,
    gs.session_date as proxima_sessao_data,
    gs.start_time as proxima_sessao_inicio,
    gs.end_time as proxima_sessao_fim,
    CASE 
        WHEN gs.session_date IS NULL THEN 'Pr√≥xima sess√£o n√£o agendada'
        ELSE 'Pr√≥xima sess√£o: ' || gs.session_date
    END as texto_exibicao
FROM public.games g
LEFT JOIN LATERAL (
    SELECT session_date, start_time, end_time
    FROM public.game_sessions gs2
    WHERE gs2.game_id = g.id 
      AND gs2.session_date >= CURRENT_DATE
    ORDER BY gs2.session_date ASC
    LIMIT 1
) gs ON true
WHERE g.status = 'active'
ORDER BY g.organization_name;

-- 9. Verificar se h√° problemas com datas
SELECT 
    'üóìÔ∏è Verifica√ß√£o de datas' as info,
    COUNT(*) as total_sessoes,
    COUNT(CASE WHEN session_date IS NULL THEN 1 END) as datas_nulas,
    COUNT(CASE WHEN session_date < '2020-01-01' THEN 1 END) as datas_muito_antigas,
    COUNT(CASE WHEN session_date > '2030-12-31' THEN 1 END) as datas_muito_futuras,
    MIN(session_date) as data_mais_antiga,
    MAX(session_date) as data_mais_recente
FROM public.game_sessions;

-- 10. Verificar hor√°rios das sess√µes
SELECT 
    '‚è∞ Verifica√ß√£o de hor√°rios' as info,
    COUNT(*) as total_sessoes,
    COUNT(CASE WHEN start_time IS NULL THEN 1 END) as inicio_nulo,
    COUNT(CASE WHEN end_time IS NULL THEN 1 END) as fim_nulo,
    COUNT(CASE WHEN start_time IS NOT NULL AND end_time IS NOT NULL THEN 1 END) as horarios_completos
FROM public.game_sessions;

-- =====================================================
-- üìä RESUMO DA VERIFICA√á√ÉO
-- =====================================================

-- Verificar se a implementa√ß√£o est√° funcionando corretamente:
-- 1. ‚úÖ Jogos devem ter sess√µes criadas (exceto jogos avulsos)
-- 2. ‚úÖ Sess√µes futuras devem existir para jogos recorrentes
-- 3. ‚úÖ Pr√≥xima sess√£o deve ser a mais pr√≥xima da data atual
-- 4. ‚úÖ Hor√°rios devem estar preenchidos
-- 5. ‚úÖ Widget deve exibir "Pr√≥xima sess√£o n√£o agendada" para jogos sem sess√µes futuras

-- =====================================================
-- üö® POSS√çVEIS PROBLEMAS E SOLU√á√ïES
-- =====================================================

-- PROBLEMA 1: Jogos sem sess√µes futuras
-- SOLU√á√ÉO: Verificar se a gera√ß√£o de sess√µes est√° funcionando
--          ou se o jogo √© do tipo "one_time" (avulso)

-- PROBLEMA 2: Datas nulas ou inv√°lidas
-- SOLU√á√ÉO: Verificar a l√≥gica de cria√ß√£o de sess√µes

-- PROBLEMA 3: Hor√°rios nulos
-- SOLU√á√ÉO: Verificar se start_time e end_time est√£o sendo definidos

-- PROBLEMA 4: Widget n√£o atualiza
-- SOLU√á√ÉO: Verificar se a consulta est√° sendo executada corretamente
--          e se os dados est√£o sendo passados para o widget

-- =====================================================




